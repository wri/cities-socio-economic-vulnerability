import axios from 'axios'
import * as fs from 'fs'
import { topology }from 'topojson-server'

const endpoint = 'https://data-api.globalforestwatch.org/dataset/'
const outDir = './topos/'

const getData = async (
    id: string,
    ver: string,
    params?: Record<string, any>
) => {
    return await axios
        .get(`${endpoint}${id}/${ver}/query`, {
            headers: { 'Accept-Encoding': 'gzip, deflate, br' },
            params,
        })
        .then(({ data }) => data.data)
        .catch(({ response }) =>
            console.error(`${response.status}: ${response.statusText}`)
        )
}

const writeCallback: fs.NoParamCallback = (err) => {
    if (err) console.log(err)
    else console.log('Success')
}

const makeFeatureCollection = (data: any[]) => {
    const datas = data.map((d: any) => {
        const { gfw_geojson: geometry, ...properties } = d
        return {
            type: 'Feature',
            properties,
            geometry: JSON.parse(geometry),
        }
    })

    const topo = topology(datas)
    
    fs.writeFile(outDir + 'locality_level.topojson', JSON.stringify(topo) + '\n', writeCallback)
}

const run = async () => {
    // 1. Call GFW API dataset endpoint and retrieve geojsons
    const data = await getData(
        'wri_mexico_locality_socio_economic_vulnerability',
        // 'wri_mexico_state_socio_economic_vulnerability',
        'v2020',
        { sql: 'SELECT gfw_geojson FROM result' }
    )

    // 2. Write a Feature Collection to .json file
    if (data)
        makeFeatureCollection(data)
}

run()
